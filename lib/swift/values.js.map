{"version":3,"sources":["../../src/swift/values.js"],"names":["escapedString","multilineString","string","replace","context","lines","split","forEach","line","index","isLastLine","length","printOnNewline"],"mappings":";;;;;QAKgBA,a,GAAAA,a;QAIAC,e,GAAAA,e;;AAThB;;AAKO,SAASD,aAAT,CAAuBE,MAAvB,EAA+B;AACpC,SAAOA,OAAOC,OAAP,CAAe,IAAf,EAAqB,KAArB,CAAP;AACD;;AAEM,SAASF,eAAT,CAAyBG,OAAzB,EAAkCF,MAAlC,EAA0C;AAC/C,QAAMG,QAAQH,OAAOI,KAAP,CAAa,IAAb,CAAd;AACAD,QAAME,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,UAAMC,aAAaD,SAASJ,MAAMM,MAAN,GAAe,CAA3C;AACAP,YAAQQ,cAAR,CAAwB,IAAGZ,cAAcQ,IAAd,CAAoB,GAAxB,IAA8BE,aAAa,IAAb,GAAoB,EAAlD,CAAvB;AACD,GAHD;AAID","file":"values.js","sourcesContent":["import {\r\n  join,\r\n  wrap,\r\n} from '../utilities/printing';\r\n\r\nexport function escapedString(string) {\r\n  return string.replace(/\"/g, '\\\\\"');\r\n}\r\n\r\nexport function multilineString(context, string) {\r\n  const lines = string.split('\\n');\r\n  lines.forEach((line, index) => {\r\n    const isLastLine = index != lines.length - 1;\r\n    context.printOnNewline(`\"${escapedString(line)}\"` + (isLastLine ? ' +' : ''));\r\n  });\r\n}\r\n"]}