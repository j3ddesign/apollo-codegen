{"version":3,"sources":["../../src/utilities/CodeGenerator.js"],"names":["CodeGenerator","constructor","context","scopeStack","indentWidth","indentLevel","output","pushScope","scope","push","popScope","pop","print","maybeString","printNewline","startOfIndentLevel","printNewlineIfNeeded","printOnNewline","printIndent","indentation","repeat","withIndent","closure","withinBlock"],"mappings":";;;;;;AAAA;;AAKe,MAAMA,aAAN,CAAoB;AACjCC,cAAYC,OAAZ,EAAqB;AACnB,SAAKA,OAAL,GAAeA,OAAf;;AAEA,SAAKC,UAAL,GAAkB,EAAlB;;AAEA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,WAAL,GAAmB,CAAnB;;AAEA,SAAKC,MAAL,GAAc,EAAd;AACD;;AAEDC,YAAUC,KAAV,EAAiB;AACf,SAAKL,UAAL,CAAgBM,IAAhB,CAAqBD,KAArB;AACD;;AAEDE,aAAW;AACT,WAAO,KAAKP,UAAL,CAAgBQ,GAAhB,EAAP;AACD;;AAEDC,QAAMC,WAAN,EAAmB;AACjB,QAAIA,WAAJ,EAAiB;AACf,WAAKP,MAAL,IAAeO,WAAf;AACD;AACF;;AAEDC,iBAAe;AACb,QAAI,KAAKR,MAAT,EAAiB;AACf,WAAKM,KAAL,CAAW,IAAX;AACA,WAAKG,kBAAL,GAA0B,KAA1B;AACD;AACF;;AAEDC,yBAAuB;AACrB,QAAI,CAAC,KAAKD,kBAAV,EAA8B;AAC5B,WAAKD,YAAL;AACD;AACF;;AAEDG,iBAAeJ,WAAf,EAA4B;AAC1B,QAAIA,WAAJ,EAAiB;AACf,WAAKC,YAAL;AACA,WAAKI,WAAL;AACA,WAAKN,KAAL,CAAWC,WAAX;AACD;AACF;;AAEDK,gBAAc;AACZ,UAAMC,cAAc,IAAIC,MAAJ,CAAW,KAAKf,WAAL,GAAmB,KAAKD,WAAnC,CAApB;AACA,SAAKE,MAAL,IAAea,WAAf;AACD;;AAEDE,aAAWC,OAAX,EAAoB;AAClB,QAAI,CAACA,OAAL,EAAc;;AAEd,SAAKjB,WAAL;AACA,SAAKU,kBAAL,GAA0B,IAA1B;AACAO;AACA,SAAKjB,WAAL;AACD;;AAEDkB,cAAYD,OAAZ,EAAqB;AACnB,SAAKV,KAAL,CAAW,IAAX;AACA,SAAKS,UAAL,CAAgBC,OAAhB;AACA,SAAKL,cAAL,CAAoB,GAApB;AACD;AAjEgC;kBAAdjB,a","file":"CodeGenerator.js","sourcesContent":["import {\r\n  join,\r\n  wrap,\r\n} from './printing';\r\n\r\nexport default class CodeGenerator {\r\n  constructor(context) {\r\n    this.context = context;\r\n    \r\n    this.scopeStack = [];\r\n\r\n    this.indentWidth = 2;\r\n    this.indentLevel = 0;\r\n\r\n    this.output = '';\r\n  }\r\n\r\n  pushScope(scope) {\r\n    this.scopeStack.push(scope);\r\n  }\r\n\r\n  popScope() {\r\n    return this.scopeStack.pop();\r\n  }\r\n\r\n  print(maybeString) {\r\n    if (maybeString) {\r\n      this.output += maybeString;\r\n    }\r\n  }\r\n\r\n  printNewline() {\r\n    if (this.output) {\r\n      this.print('\\n');\r\n      this.startOfIndentLevel = false;\r\n    }\r\n  }\r\n\r\n  printNewlineIfNeeded() {\r\n    if (!this.startOfIndentLevel) {\r\n      this.printNewline();\r\n    }\r\n  }\r\n\r\n  printOnNewline(maybeString) {\r\n    if (maybeString) {\r\n      this.printNewline();\r\n      this.printIndent();\r\n      this.print(maybeString);\r\n    }\r\n  }\r\n\r\n  printIndent() {\r\n    const indentation = ' '.repeat(this.indentLevel * this.indentWidth);\r\n    this.output += indentation;\r\n  }\r\n\r\n  withIndent(closure) {\r\n    if (!closure) return;\r\n\r\n    this.indentLevel++;\r\n    this.startOfIndentLevel = true;\r\n    closure();\r\n    this.indentLevel--;\r\n  }\r\n\r\n  withinBlock(closure) {\r\n    this.print(' {');\r\n    this.withIndent(closure);\r\n    this.printOnNewline('}');\r\n  }\r\n}\r\n"]}